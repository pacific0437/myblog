<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Default | Ashley's Blog]]></title>
  <link href="http://pacific0437.github.io/myblog/blog/categories/default/atom.xml" rel="self"/>
  <link href="http://pacific0437.github.io/myblog/"/>
  <updated>2014-12-05T23:48:48+08:00</updated>
  <id>http://pacific0437.github.io/myblog/</id>
  <author>
    <name><![CDATA[Ashley Yang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Regex Review]]></title>
    <link href="http://pacific0437.github.io/myblog/blog/regex-review/"/>
    <updated>2014-11-21T20:26:59+08:00</updated>
    <id>http://pacific0437.github.io/myblog/blog/regex-review</id>
    <content type="html"><![CDATA[<h2>复习 regexp</h2>

<p>/hello world/</p>

<p>/hello world\b/ 其实还有\B</p>

<p>/^hello world$/</p>

<p>\w [A-Za-z0-9_]</p>

<hr />

<p>/g global</p>

<p>/i ignore</p>

<p>/m multiple</p>

<hr />

<p>exec
通过( )分组匹配</p>

<pre><code>var osVersion = 'Ubuntu 8';//其中的8表示系统主版本号  
re=/^[a-z]+\s+(\d+)$/i;//用()来创建子匹配  
arr =re.exec(osVersion);  
console.log(arr[0]);//整个osVersion,也就是正则表达式的完整匹配
console.log(arr[1]);//分组 第一个括号所匹配的  8
</code></pre>

<p>反向引用 先挖个大坑 To be continued&hellip;&hellip;..</p>

<p>非贪婪匹配</p>

<ul>
<li>??</li>
<li>+?</li>
<li>*?</li>
<li>{1,4}?</li>
</ul>


<hr />

<h4>分组相关（）</h4>

<ul>
<li><p>/([&lsquo;&ldquo;])[^&rsquo;&rdquo;]*\1/</p></li>
<li><p>(?:&hellip;)  只组合不记忆</p></li>
<li><p>(?=&hellip;) 先行断言 指定一个位置 零宽 并非真正匹配
/Java([Ss]cript)(?=:)/ 可以匹配&#8221;Javascript: The Definitive Guide&#8221;中的Javascript 不包含冒号 但是必须要有！</p></li>
<li><p>(?!&hellip;) 负向先行断言</p></li>
</ul>


<h4>String方法</h4>

<ul>
<li>search</li>
<li>replace</li>
<li>match</li>
<li>split</li>
</ul>


<h4>RexExp方法</h4>

<ul>
<li>exec</li>
<li>test</li>
</ul>


<p>通过上面的学习我尝试去分析一下Jquery源码中一个正则表达式</p>

<pre><code>rquickExpr = /^(?:\s*(&lt;[\w\W]+&gt;)[^&gt;]*|#([\w-]*))$/
</code></pre>

<p>最外面包裹的的恰好是代表完全匹配的/^&hellip;$/</p>

<p>次外层只组合不记忆(?:&hellip;)</p>

<ul>
<li>\s*   <strong>一些空格</strong></li>
<li>(&lt;[\w\W]+>)  <strong>Tag标签</strong></li>
<li>[^>]*  <strong>任意非>字符</strong></li>
<li>| <strong>或者</strong></li>
<li>#([\w-]*)) <strong>#+任意字符或者-</strong></li>
</ul>


<p>所以该正则匹配的是 Tag标签  或者 #开头的字符串（获取id用吗？）。
分析的是否正确等下一篇继续介绍jQuery源码的blog再分析吧</p>
]]></content>
  </entry>
  
</feed>
